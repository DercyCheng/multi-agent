# Production environment configuration
global:
  environment: production
  storageClass: premium-ssd

replicaCount: 5

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 20
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

image:
  pullPolicy: IfNotPresent
  imagePullSecrets:
    - registry-secret

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Enhanced pod anti-affinity for production
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - llm-service
        topologyKey: kubernetes.io/hostname
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - llm-service
          topologyKey: topology.kubernetes.io/zone

persistence:
  enabled: true
  storageClass: premium-ssd
  size: 50Gi
  annotations:
    volume.beta.kubernetes.io/storage-class: "premium-ssd"

redis:
  enabled: true
  auth:
    enabled: true
  cluster:
    enabled: true
  master:
    persistence:
      enabled: true
      storageClass: premium-ssd
      size: 20Gi
  replica:
    replicaCount: 3
    persistence:
      enabled: true
      storageClass: premium-ssd
      size: 20Gi

database:
  enabled: true
  host: postgresql-production
  database: llm_service_production
  ssl: true
  maxConnections: 200

ollama:
  enabled: true
  models:
    - mistral
    - codellama
    - llama2
    - mixtral
  healthCheck:
    enabled: true
    interval: 30s
    timeout: 5s
  loadBalancing:
    enabled: true
    strategy: least_connections
  multiServer:
    enabled: true
    servers:
      - url: http://ollama-1:11434
        weight: 1
      - url: http://ollama-2:11434
        weight: 1
      - url: http://ollama-3:11434
        weight: 1

cron:
  enabled: true
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

featureFlags:
  ollama_enabled: true
  cron_enabled: true
  redis_enabled: true
  database_enabled: true
  monitoring_enabled: true
  tracing_enabled: true

monitoring:
  enabled: true
  prometheus:
    enabled: true
    interval: 15s
  grafana:
    enabled: true
    dashboards:
      enabled: true
  jaeger:
    enabled: true

logging:
  level: warn
  format: json
  enabled: true

podDisruptionBudget:
  enabled: true
  minAvailable: 2

networkPolicy:
  enabled: true

serviceMonitor:
  enabled: true
  interval: 15s
  scrapeTimeout: 5s

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: llm-service.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: llm-service-tls
      hosts:
        - llm-service.example.com

# Security enhancements for production
securityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000
  fsGroupChangePolicy: "OnRootMismatch"

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

# Node selection for production workloads
nodeSelector:
  node-type: compute-optimized

tolerations:
  - key: "workload"
    operator: "Equal"
    value: "production"
    effect: "NoSchedule"
